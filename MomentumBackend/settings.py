"""
Django settings for MomentumBackend project.

Generated by 'django-admin startproject' using Django 3.2.9.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
from pathlib import Path
import json
import random
import string
from corsheaders.defaults import default_headers
from .configuration import Configuration

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


def getRandomString(length):
    # choose from all lowercase letterF
    letters = string.ascii_lowercase
    result_str = "".join(random.choice(letters) for _ in range(length))
    return result_str


CONFIGURATION = Configuration.load()

SETTINGS_JSON = "settings.json"

try:
    with open(SETTINGS_JSON) as json_file:
        INTERN_SETTINGS = json.load(json_file)
except FileNotFoundError:
    INTERN_SETTINGS_TEMPLATE = {
        "secret_key": getRandomString(16),
        "last_leaderboard_reset": 0,
    }
    json.dump(INTERN_SETTINGS_TEMPLATE, open(SETTINGS_JSON, "w"), indent=4)

with open(SETTINGS_JSON) as json_file:
    INTERN_SETTINGS = json.load(json_file)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = INTERN_SETTINGS["secret_key"]

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = CONFIGURATION["debug"]

ALLOWED_HOSTS = ["*"] # CONFIGURATION["allowed_hosts"]

CORS_ALLOW_HEADERS = list(default_headers) + [
    "Session-Token",
]

CORS_ALLOWED_ORIGINS = CONFIGURATION["allowed_origins"] # *

CORS_ALLOW_CREDENTIALS = True # False

# Application definition

INSTALLED_APPS = [
    "daphne",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "MomentumBackend",
    "corsheaders",
    "ordered_model",
    "rest_framework",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "MomentumBackend.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "MomentumBackend.wsgi.application"
ASGI_APPLICATION = "MomentumBackend.asgi.application"

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql_psycopg2",
        "NAME": CONFIGURATION["database"]["name"],
        "USER": CONFIGURATION["database"]["user"],
        "PASSWORD": CONFIGURATION["database"]["password"],
        "HOST": CONFIGURATION["database"]["host"],
        "PORT": CONFIGURATION["database"]["port"],
        "DISABLE_SERVER_SIDE_CURSORS": True,
    }
}

if not CONFIGURATION["use_postgres"]:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": str(BASE_DIR / "db.sqlite3"),
        }
    }

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = "/static/"

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = CONFIGURATION["email_smtp_server"]
EMAIL_USE_TLS = True
EMAIL_PORT = CONFIGURATION["email_smtp_port"]
EMAIL_HOST_USER = CONFIGURATION["email_address"]
EMAIL_HOST_PASSWORD = CONFIGURATION["email_password"]
